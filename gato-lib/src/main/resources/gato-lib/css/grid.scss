/* Simple Grid Using Element Queries */
$collist : 2 3 4 5 6 8 12;
@mixin eq-base($name) {
  $ret : '.eq-'+$name+'-1-1';
  @each $i in $collist {
    $max : $i - 1;
    @for $j from 1 through $max {
      $ret : $ret + ', .eq-'+$name+'-' + $j + '-' + $i;
    }
  }
  #{$ret} {
    display: inline-block;
    zoom: 1;
    letter-spacing: normal;
    word-spacing: normal;
    vertical-align: top;
    text-rendering: auto;
    width: 100%;
  }
}

@mixin eq-cols($name) {
  @each $i in $collist {
    $max : $i - 1;
    @for $j from 1 through $max {
      &.eq-#{$name}-#{$j}-#{$i} {
        width: 100% * $j / $i;
      }
      &.eq-#{$name}-off-#{$j}-#{$i} {
        margin-left: 100% * $j / $i;
      }
    }
  }
}

$eq-breakpoints: (xs: 100px, sm: 200px, md: 401px, ml: 600px, lg: 800px, xl: 1200px);
@mixin eq-min-width($name) {
  @if not map_has_key($eq-breakpoints, $name) {
    @error "#{$name} is not a valid eq-breakpoint name";
  }
  .eq-parent[min-width~="#{map_get($eq-breakpoints, $name)}"] > * {
    @content;
  }
}

@mixin eq-max-width($name) {
  @if not map_has_key($eq-breakpoints, $name) {
    @error "#{$name} is not a valid eq-breakpoint name";
  }
  .eq-parent[max-width~="#{map_get($eq-breakpoints, $name) - 1px}"] > * {
    @content;
  }
}

@mixin eq-mn {
  .eq-parent > * {
    @content;
  }
}

@include eq-base('mn');
@include eq-mn {
  @include eq-cols('mn');
}

@each $name in map_keys($eq-breakpoints) {
  @include eq-base($name);
  @include eq-min-width($name) {
    @include eq-cols($name);
  }
}
